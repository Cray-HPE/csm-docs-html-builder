#!/bin/usr/env bash

function make_new_title() {
    # Remove "CSM", extra spaces, number signs, html, and colons.
    # Change underscores to spaces. Capitalize acronyms and every word.
    echo "${1}" | \
    sed -r 's`^#+ ``' | \
    sed -r 's`CSM``' | sed 's`csm``g' | sed 's`()``g' | \
    sed -r 's`^ +``' | \
    sed 's`:``g' | \
    sed 's`_` `g' | \
    sed -r 's`<.*>.*<.*>``' | \
    sed 's`\\(`(`g' | sed 's`\\)`)`g' | \
    awk '{for (i=1; i<=NF; ++i) { $i=toupper(substr($i,1,1)) tolower(substr($i,2)); } print }' | \
    sed -r 's`[S,s]ls`SLS`' | \
    sed -r 's`[T,s]ls`TLS`' | \
    sed -r 's`[P,p]ki`PKI`' | \
    sed -r 's`[S,s]sh`SSH`' | \
    sed -r 's`[U,u]an`UAN`' | \
    sed -r 's`[U,u]ai`UAI`' | \
    sed -r 's`[U,u]as`UAS`' | \
    sed -r 's`[B,b]mc`BMC`' | \
    sed -r 's`[H,h]ttps`HTTPS`' | \
    sed -r 's`[H,h]ttp`HTTP`' | \
    sed -r 's`[L,l]dap`LDAP`' | \
    sed -r 's`[R,r]eds`REDS`' | \
    sed -r 's`[M,m]eds`MEDS`' | \
    sed -r 's`[N,n]tp`NTP`' | \
    sed -r 's`[C,c]apmc`CAPMC`' | \
    sed -r 's`[K,k]vm`KVM`' | \
    sed -r 's`[G,g]pu`GPU`' | \
    sed -r 's`[H,h]sn`HSN`' | \
    sed -r 's`[H,h]sm`HSM`' | \
    sed -r 's`[N,n]ic`NIC`' | \
    sed -r 's`[N,n]cn`NCN`' | \
    sed -r 's`[B,b]gp`BGP`' | \
    sed -r 's`[D,d]ns`DNS`' | \
    sed -r 's`[D,d]hcp`DHCP`' | \
    sed -r 's`[H,h]pe`HPE`' | \
    sed -r 's`[I,i]ms`IMS`' | \
    sed -r 's`[F,f]as`FAS`' | \
    sed -r 's`[C,c]fs`CFS`' | \
    sed -r 's`[B,b]os`BOS`' | \
    sed -r 's`[C,c]rus`CRUS`' | \
    sed -r 's`[C,c]an`CAN`' | \
    sed -r 's`[P,p]xe`PXE`' | \
    sed -r 's`[A,a]cl`ACL`'
}

function transform_links() {
    # Remove .md suffixes from links and lowercase text.
    # $1 is the file content

    # Adds hugo's relref function to transform relative links during build step.
    # Converts:
    # - Skips internal stash links
    # - root links to relative links
    # - wraps links in hugo's refrel lookup unless it has "http"
    # - fixes image references
    # - replaces <a name="anchor"> format for hugo anchor ref formats
    # - changes index.md to _index.md
    # e.g. [Who]({{< relref "./about.md#who" >}})
    cat $1 | \
    grep -v "stash.us.cray.com" | \
    sed -r 's|\]\(\/|\]\(\.\/|g' | \
    sed -r 's|\]\(([^)|:]*).md(#.*)?\)|\]\(\{\{\< relref \"\.\/\1.md\2\" \>\}\}\)|g' | \
    sed -r 's|\]\(([^)]*)\.(png\|svg)(#.*)?\)|\]\(\.\./\1\.\2\)|g' | \
    sed -rz 's|<a name="([^"]*)"></a>\s*\n(\s*#+ [^\n]*)|\2 {#\1}|g' | \
    sed 's|\"\"|\"|g' | \
    sed 's|index.md|_index.md|g'
}

function gen_hugo_yaml() {
    cat <<-YAML
---
title: $1
date: $(date)
draft: false
---
YAML
}

function gen_index_header() {
    cat <<-YAML
# $1
Topics:
YAML
}

function gen_index_content() {
    # e.g. 1. [Prepare Configuration Payload](prepare_configuration_payload)
    for f in $(ls $1/)
    do
        if [[ $f != "_index.md" ]] && [[ "${f: -3}" == ".md" ]] || \
        [[ -d ${1}/$f ]] && [[ ! $(echo $f | grep -E "(^img$|^scripts$)") ]]; then
            f=$(echo $f | sed 's`.md``' | awk '{print tolower($0)}')
            echo "1. [$(make_new_title ${f})](${f})"
        fi
    done
}
