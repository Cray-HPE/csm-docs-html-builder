#!/bin/usr/env bash

function make_new_title() {
    # Remove extra spaces, number signs, html, and colons.
    # Change underscores to spaces.
    echo "${1}" | \
    sed -r 's`^#+ ``' | \
    sed -r 's`^ +``' | \
    sed 's|`||g' | \
    sed 's`:``g' | \
    sed 's`_` `g' | \
    sed -r 's`<.*>.*<.*>``' | \
    sed 's`\\(`(`g' | sed 's`\\)`)`g'
}

function transform_links() {
    # Remove .md suffixes from links and lowercase text.
    # $1 is the file content

    # Adds hugo's relref function to transform relative links during build step.
    # e.g. [Who]({{< relref "./about.md#who" >}})
    # Converts:
    # - Skips internal stash links
    # - root links to relative links
    # - wraps links in hugo's refrel lookup unless it has "http"
    # - fixes image references
    # - replaces <a name="anchor"> format for hugo anchor ref formats
    # - changes README.md/index.md to '' - these files are renamed to _index.md and treated as directory index
    #   to _index.md file. So we just point to directory instead.
    cat $1 | \
    grep -v "stash.us.cray.com" | \
    sed -r 's|\]\(\/|\]\(\.\/|g' | \
    sed -r 's|\]\(([^)|:]*)\.md(#[^)]*)?\)|\]\(\{\{\< relref \"\.\/\1.md\2\" \>\}\}\)|g' | \
    sed -r 's|\]\(([^)|:]*)\.(png\|svg)( [^)]*)?\)|\]\(\.\./\1\.\2\3\)|g' | \
    sed -rz 's|<a name="([^"]*)"></a>\s*\n(\s*#+ [^\n]*)|\2 {#\1}|g' | \
    sed -rz 's|<(/)?aside( class="[^"]*")?>|<\1blockquote>|g'| \
    sed 's#/README\.md##g' | \
    sed 's#/index\.md##g'
}

function gen_hugo_yaml() {
    cat <<-YAML
---
title: $1
date: $(date)
draft: false
${2+weight: $2}
---
YAML
}

function gen_index_header() {
    cat <<-YAML
# $1
Topics:
YAML
}

function get_old_title() {
    # Look for a header1 tag in the first 10 lines of the file.
    cat $1 | head -10 | grep -E "^(#+\s|<h1)" | head -1 | sed -e 's|<h1[^>]*>||' | sed -e 's|</h1>||'
}

function gen_index_content() {
    # e.g. 1. [Prepare Configuration Payload](prepare_configuration_payload)
    for f in $(ls $1/)
    do
        if [[ $f != "_index.md" ]] && [[ "${f: -3}" == ".md" ]] || \
        [[ -d ${1}/$f ]] && [[ $(find "${1}/${f}" -name '*.md' | wc -l) -gt 0 ]]; then
            t=""
            # Try to get title from md file header first
            test -d "${1}/${f}" || t=$(get_old_title "${1}/${f}")
            # If unable to identify title from md file header, fall down to file/directory name
            test -z "${t}" && t=$(echo $f | sed 's`.md``' | awk '{print tolower($0)}')
            t=$(make_new_title "${t}")
            echo "1. [${t}](${f})"
        fi
    done
}
